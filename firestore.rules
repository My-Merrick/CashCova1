rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Bots collection
    match /bots/{bot} {
      allow read: if true; // Allow anyone to read bot documents
      allow create: if request.auth != null; // Allow authenticated users to create bot documents
      allow delete, update: if request.auth != null; // Allow authenticated users to delete or update bot documents
    }

    // Listings collection
    match /listings/{listing} {
      allow read: if true; // Allow anyone to read listing documents
      allow create: if request.auth != null && request.resource.data.imgUrls.size() < 7; // Allow authenticated users to create listings if imgUrls array size < 7
      allow delete: if resource.data.userRef == request.auth.uid; // Allow authenticated users to delete their own listings
      allow update: if resource.data.userRef == request.auth.uid; // Allow authenticated users to update their own listings
    }

    // Users collection
    match /users/{user} {
      allow read: if request.auth != null; // Allow authenticated users to read any user document (including their own)
      allow create: if request.auth != null; // Allow authenticated users to create user documents
      allow update: if request.auth.uid == user; // Allow authenticated users to update their own user document

      // **Allow updating referrer's balance:**
      allow update: if request.auth != null &&
                   request.resource.data.balance != null && // Ensure balance field exists
                   request.resource.data.balance > 0; // Ensure the balance is updated to a positive value

      // Subcollection: purchasedBots
      match /purchasedBots/{botId} {
        allow read, write: if request.auth != null && request.auth.uid == user; // Allow authenticated users to read and write to their own purchasedBots documents
      }

      // Subcollection: tossCoinsHistory
      match /tossCoinsHistory/{documentId} {
        allow read, write: if request.auth != null && request.auth.uid == user; // Allow authenticated users to read and write to their own tossCoinsHistory documents
      }

      // Subcollection: numberGuessingHistory (Allow writing to history)
      match /numberGuessingHistory/{documentId} {
        allow read: if request.auth != null && request.auth.uid == user; // Allow authenticated users to read history
        allow write: if request.auth != null && request.auth.uid == user; // Allow authenticated users to write to their own history
        allow delete: if request.auth != null && request.auth.uid == user; // Allow authenticated users to delete from their own history
      }

      // Subcollection: instantLotteryHistory
      match /instantLotteryHistory/{documentId} {
        allow read: if request.auth != null && request.auth.uid == user; // Allow authenticated users to read history
        allow write: if request.auth != null && request.auth.uid == user; // Allow authenticated users to write to their own history
        allow delete: if request.auth != null && request.auth.uid == user; // Allow authenticated users to delete from their own history
      }

      // Subcollection: earningsHistory
      match /earningsHistory/{documentId} {
        allow read: if request.auth != null && request.auth.uid == user; // Allow authenticated users to read earningsHistory for any bot
        allow write: if request.auth != null && request.auth.uid == user; // Allow authenticated users to write to earningsHistory for any bot
      }

      // Subcollection: rouletteHistory
      match /rouletteHistory/{documentId} {
        allow read, write: if request.auth != null && request.auth.uid == user;
      }
    }

    // Logins collection
    match /logins/{loginId} {
      allow read: if true; // Allow anyone to read login documents
      allow create: if request.auth != null; // Allow authenticated users to create login documents
      allow delete, update: if false; // Disable delete and update operations for logins
    }
  }
}
